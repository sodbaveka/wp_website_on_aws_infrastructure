### Generalities
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation VPC Template
### Create ressources
Resources:
  # ##################
  # # Infrastructure #
  # ##################
  #
  #
  ### First step : Create EC2 Security Group
  InfraEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Infra EC2 security group
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: vpc-8ce01ae4
      Tags:
        - Key: Name
          Value: 'sodbaveka-ec2-securityG'
        - Key: Project
          Value: 'P10_OCR'
  #
  #
  # ### Next step : Create RDS Security Group
  # InfraRDSSecurityGroup:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     GroupDescription: Infra RDS security group
  #     SecurityGroupEgress:
  #       - IpProtocol: -1
  #         CidrIp: 0.0.0.0/0
  #     SecurityGroupIngress:
  #       - IpProtocol: tcp
  #         FromPort: 3306
  #         ToPort: 3306
  #         # A MODIFIER
  #         CidrIp: 0.0.0.0/0
  #         # A SUPPRIMER
  #       - IpProtocol: tcp
  #         FromPort: 22
  #         ToPort: 22
  #         CidrIp: 0.0.0.0/0
  #     VpcId: vpc-8ce01ae4
  #     Tags:
  #       - Key: Name
  #         Value: 'sodbaveka-rds-securityG'
  #       - Key: Project
  #         Value: 'P10_OCR'
  # #
  # #
  # ### Next step : Create RDS instance
  # DBserver001:
  #   Type: AWS::RDS::DBInstance
  #   Properties:
  #     Engine: MySQL
  #     MasterUsername: theseus
  #     MasterUserPassword: theseus1
  #     DBName: WordPress
  #     DBInstanceClass: db.t2.micro
  #     AllocatedStorage: '20'
  #     AvailabilityZone: eu-west-3a
  #     VPCSecurityGroups: 
  #       - !Ref InfraRDSSecurityGroup
  #     Tags:
  #       - Key: Name
  #         Value: 'sodbaveka-rds-testInstance'
  #       - Key: Project
  #         Value: 'P10_OCR'
  # #
  # #
  ### Next step : Create EFS Security Group
  InfraEFSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Infra EFS security group
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          SourceSecurityGroupId: !Ref InfraEC2SecurityGroup
      VpcId: vpc-8ce01ae4
      Tags:
        - Key: Name
          Value: 'sodbaveka-efs-securityG'
        - Key: Project
          Value: 'P10_OCR'
  #
  #
  ### Next step : Create EFS instance
  EFSFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      BackupPolicy:
        Status: ENABLED
      Encrypted: true
      LifecyclePolicies:
        - TransitionToIA: AFTER_60_DAYS
      PerformanceMode: generalPurpose
      Encrypted: true
      ThroughputMode: bursting
      FileSystemTags: 
        - Key: Name
          Value: 'sodbaveka-efs-instance'
        - Key: Project
          Value: 'P10_OCR'
  MountTarget1:
    Type: AWS::EFS::MountTarget
    Properties: 
      FileSystemId: !Ref EFSFileSystem
      IpAddress: 172.31.0.30
      SecurityGroups: 
        - !Ref InfraEFSSecurityGroup
      SubnetId: subnet-130eef7b
  MountTarget2:
    Type: AWS::EFS::MountTarget
    Properties: 
      FileSystemId: !Ref EFSFileSystem
      IpAddress: 172.31.16.30
      SecurityGroups: 
        - !Ref InfraEFSSecurityGroup
      SubnetId: subnet-bcb78fc7
  #
  #
  ### Next step : Create EC2 instance
  InstAppli001:
    DependsOn: 
      - EFSFileSystem
    Type : AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-00c08ad1a6ca8ca7c
      KeyName: P10-aws
      InstanceInitiatedShutdownBehavior: terminate
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet: 
            - !Ref InfraEC2SecurityGroup
      Tags:
        - Key: Name
          Value: 'sodbaveka-ec2-testInstance'
        - Key: Project
          Value: 'P10_OCR'
      UserData: 
        'Fn::Base64': !Sub |
          #!/bin/bash
          
          export STACK_NAME=${AWS::StackName}
          export EFS_IP=${MountTarget1.IpAddress}
          export EFS_ID=${EFSFileSystem.FileSystemId}
          echo "Stack name : "$STACK_NAME > /home/ec2-user/TEMOIN-001
          echo "EFS ip : "$EFS_IP >> /home/ec2-user/TEMOIN-001
          echo "EFS id : "$EFS_ID >> /home/ec2-user/TEMOIN-001
          echo "Database host : "$DB_HOST >> /home/ec2-user/TEMOIN-001
          
          echo "OS update : In progress..." >> /var/log/userdata.txt
          yum update -y && echo "OS update : Completed." >> /var/log/userdata.txt

          echo "Docker installation : In progress..." >> /var/log/userdata.txt
          amazon-linux-extras install docker
          yum install -y docker
          service docker start && echo "Docker installation : Completed." >> /var/log/userdata.txt
          usermod -a -G docker ec2-user

          echo "Mysql-client installation : In progress..." >> /var/log/userdata.txt
          yum install -y mysql && echo "Mysql-client installation : Completed." >> /var/log/userdata.txt

          echo "Mounting aws efs : In progress..." >> /var/log/userdata.txt
          mkdir /home/ec2-user/efs-mount-point
          mount -t nfs -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport $EFS_ID.efs.eu-west-3.amzonaws.com:/ /home/ec2-user/efs-mount-point
          chmod -R 777 /home/ec2-user/efs-mount-point
          cd /home/ec2-user/efs-mount-point
          echo "test - `date`" > mount_log.txt && echo "Mounting aws efs : Completed." >> /var/log/userdata.txt

          echo "Writing in fstab : In progress..." >> /var/log/userdata.txt
          export EXIST_MOUNT=`grep -i "$EFS_ID" /etc/fstab`
          if [[ -z "$EXIST_MOUNT" ]] ; then
            echo "$EFS_ID.efs.eu-west-3.amzonaws.com:/ /home/ec2-user/efs-mount-point nfs defaults,_netdev 0 0" >> /etc/fstab  
          fi
          echo "Writing in fstab : Completed." >> /var/log/userdata.txt